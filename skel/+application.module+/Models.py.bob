# -*- coding: utf-8 -*-
# {{ application.name }}
# {{ author.name }}

import json, os, logging, string, random
from flask.ext.security import UserMixin, RoleMixin, login_required
from flask.ext.diamond.utils.mixins import CRUDMixin
from flask.ext.diamond.utils import id_generator, flatten
from flask.ext.diamond.models import User, Role
from sqlalchemy_utils import ChoiceType
from . import db, security

GENDER_CHOICES = [
    ('M', 'Male'),
    ('F', 'Female')
]

class Individual(db.Model, CRUDMixin):
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(255))

    association_id = db.Column(db.Integer, db.ForeignKey('individual.id'))
    association = db.relationship('Individual',
        primaryjoin = ('Individual.association_id == Individual.id'),
        remote_side="Individual.id")

    def set_association(self, obj):
        self.father = obj
        self.save()

    def as_hash(self):
        pass

    def __str__(self):
        return self.name
